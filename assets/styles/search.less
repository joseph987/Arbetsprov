/*********** Reset style ************/
/************************************/
* { margin:0; padding:0; border:0; background: transparent; outline:0 none; font:inherit; line-height:inherit; box-sizing:border-box; }

html {
        line-height:1;
        font-size  :16px; /** fallback **/ font-size : 1vw;  /** fontsize depending only on width  **/
}

body {
        margin:0 auto;                   
}

input { width:100%; }

/*********** Less functions *********/
/************************************/
@null     : null;
@optional : @null;

/** Utility functions written for this task (some reused from exisiting personal code) **/
.XY() {
        .max-font-size(@max-width:1440px, @max-font:72px) {
                @media screen and (min-width: @max-width) {
                        font-size: @max-font; max-width: @max-width;
                }
        }
        
        .ellipsis(@width:100%) {
                /*      All four neccesary, note that parent should possibly also have overflow hidden
                        Won't work in certain cases with flex elements
                */
                text-overflow: ellipsis;
                white-space: nowrap;
                overflow: hidden;
                width: @width;
        }
        
        .selection() {
                .disable() {
                        .XY.selection.custom(none, rgba(0, 0, 0, 0));
                        cursor: default; /** We do not want the cursor to change when mousing over text **/
                }
                
                .enable() {
                        .XY.selection.custom(all, rgba(255, 255, 255, 0.5));
                        cursor: auto;
                }
        
                .custom(@val, @tap) {
                        -moz-user-select: e('-moz-@{val}');
                        -ms-user-select: @val;
                        -webkit-user-select: @val;
                        -webkit-touch-callout: @val;
                        -webkit-tap-highlight-color: @tap;
                        
                        user-select: @val;
                }
        }
        
        .flex(@important:@optional) {
                & when (@important = @optional) {
                        display: -webkit-box;
                        display: -moz-box;
                        display: -ms-flexbox;
                        display: -webkit-flex;
                        display: flex;
                        flex: 0 1 auto;
                }
                & when not (@important = @optional) {
                        display: -webkit-box !important;
                        display: -moz-box !important;
                        display: -ms-flexbox !important;
                        display: -webkit-flex !important;
                        display: flex !important;
                        flex: 0 1 auto !important;
                }
                
                .cols(@extends:@optional) {
                        & when (@extends = @optional) {
                                .XY.flex();
                        }
                
                        -ms-flex-direction: row;
                        -webkit-flex-direction: row;
                        flex-direction: row;
                }
                
                .rows(@extends:@optional) {
                        & when (@extends = @optional) {
                                .XY.flex();
                        }
        
                        -ms-flex-direction: column;
                        -webkit-flex-direction: column;
                        flex-direction: column;
                }
                
                .align-items(@variable:@optional) {
                        -ms-flex-align      : @variable;
                        -webkit-align-items : @variable;       
                        align-items         : @variable;
        
                        .start() {
                                .XY.flex.align-items(flex-start);
                        }
                        .center() {
                                .XY.flex.align-items(center);
                        }
                        .end() {
                                .XY.flex.align-items(flex-end);
                        }
                }
                
                .justify-content(@variable:@optional) {
                        -webkit-justify-content: @variable;
                        
                        // --- ms fallbacks --- 
                        & when (@variable = space-between) {
                                -ms-flex-pack : justify;
                        }
                        & when (@variable = space-around) {
                                -ms-flex-pack: distribute;
                        }
                        & when not (@variable = space-between) and not (@variable = space-around) {
                                -ms-flex-pack : @variable;
                        }
                        // --------------------
                        justify-content : @variable;
                        
                        .start() {
                                .XY.flex.justify-content(justify-start);
                        }
                        .center() {
                                .XY.flex.justify-content(center);
                        }
                        .end() {
                                .XY.flex.justify-content(justify-end);
                        }
        
                        .between() {
                                .XY.flex.justify-content(space-between);
                        }
                }
        }
        
}

/******* Search page specific *******/
/************************************/

// ---------------------------------
// ---------------------------------
@placeholder-color      :#B5C3D2;
@placeholder-color-focus:darken(@placeholder-color, 15);

@body-bg-color-start    :#002750;
@body-bg-color-end      :#3b58a7;
@input-color-bg         :#899DB4;
@input-bg-color-focus   :#b3beca;

@graphics               :'../graphics/';   
@logo-bg-img            :'@{graphics}logo.svg';
@search-bg-img          :'@{graphics}search.svg';
// ---------------------------------
// ---------------------------------

html {
        font-family: 'Source Sans Pro', 'Arial', sans-serif;;
        font-weight:normal;
        
        .XY.selection.disable();
}

body {
        font-size:5em;
        background:linear-gradient(180deg, @body-bg-color-start, @body-bg-color-end);
        background-attachment: fixed;
        
        html:not([max-font-size=false]) & {
                /* 
                         Additional configuration option
                         Unless attribute max-font-size=false we rely on a max font size of 50px
                         Example -> http://localhost:63342/path/to/HM/UI/assets/search.html?max-font-size=false
                         When set to false, the page will grow as much as the width of the window requires, without any maximum size limitation
                         When not set, we will enforce a max size because at certain levels, it just gets too big. 
                         It is however responsive below those levels
                 */  
                 
                .XY.max-font-size(@max-width:1040px, @max-font:50px);
        }
}

input {
        /* Most modern browsers will support ::placeholder now */
        &::placeholder {
                color: @placeholder-color;
        }
        &:focus::placeholder {
                color: @placeholder-color-focus;
        }
}

#logo {
        background: url(@logo-bg-img) center / contain no-repeat;
        height:2em;
        margin:3.25em 0;
}

#search {
        /** z-index required to prevent close button overlay on favorites to appear above suggestions **/
        z-index:2; 
        
        margin:0 1.75em; position: relative;
        
        @input-border-radius:0.25em;
        > input {
                color:white;
                border-radius       : @input-border-radius;
                
                @icon-width         : 1.15em;
                @icon-left-margin   : @icon-width * 1;
                @icon-right-margin  : @icon-left-margin * 0.75;
                background-image    : url(@search-bg-img);
                background-repeat   : no-repeat;
                background-size     : @icon-width * 1 auto;
                background-position : @icon-left-margin 50%;
                background-color    : @input-color-bg;
                
                @padding-top-bottom-right : @icon-width / 1.5;
                @padding-left             : @icon-left-margin + @icon-width + @icon-right-margin;
                @padding-right            : @icon-left-margin;
                padding                   : @padding-top-bottom-right @padding-right @padding-top-bottom-right @padding-left;
                
                &:focus {
                        background-color: @input-bg-color-focus;
                }
        }
        
        @ol-bg:white;
        @li-bg-color-hover : darken(@ol-bg, 5);
        > .suggestions {
                display:none; font-size:0.75em; list-style: none; background-color: @ol-bg; position: absolute; left:0; right:0;
                
                /** We hide the border radius on the input by pulling this list @up to at least cover the border-radius on input so edges don't appear **/
                margin-top:-1 * @input-border-radius;
                
                &, > li:last-child {
                        /** border-radius required for both to prevent hard edges on focus for li on last child **/
                        border-bottom-right-radius: @input-border-radius;
                        border-bottom-left-radius : @input-border-radius;
                }
                
                > li {
                        cursor:pointer; padding:1em;
                        
                        &:hover, &:active, &:focus {
                                background-color:@li-bg-color-hover
                        }
                }
        }
}

#favorites {
        /** z-index required to prevent close button overlay on favorites to appear above suggestions **/
        z-index:1; display:none;
        
        color:white; list-style: none; margin-top:1.5em; padding:1.15em 0;
        
        @a:#20416A; @b: fadeout(lighten(@a, 25), 85);
        background:linear-gradient(180deg, @b, lighten(@b, 30));
        
        > li {
                @height:3em; 
                
                .XY.flex.cols(); .XY.flex.align-items.center(); .XY.flex.justify-content.between();
        
                height :@height;
                
                > :first-child {
                        padding-left:2em; .XY.ellipsis(45%);
                }
                
                > .title {
                        
                }
                
                > .date {
                        font-size:0.8em;
                }
        
                @close-bg-color   : #793953;
                @close-text-color : lighten(@close-bg-color, 30);
                > .close {
                        
                        color   : @close-text-color;
                        position: relative; cursor: pointer; width:@height; height:@height;
                        
                        &:before {
                                /** The white circle with X **/
                                
                                content:''; position:absolute;
                                
                                @radius  : 100% * 0.35;
                                @center  : (100% - @radius)/2;
                                width    : @radius; height:@radius;
                                top      : @center; left : @center;
                                
                                border-radius    :50%;
                                background-color :white;
                        }
                        
                        &:after {
                                /** 
                                        The (x) is done separately to rely on lineheight to center it. 
                                        We adjust the font-size and the line-height accordingly with a small nudge so it really feels properly centered.  
                                        Same can be pulled off in &:before but leads to increased complexity. This is pretty straightforward. 
                                         
                                **/
                                
                                content:'✕'; position:absolute;
                                
                                text-align: center;
                                
                                @font-size:0.6; @nudge-top:0.015; @nudge-left:0.05;
                                
                                font-size:1em * @font-size;
                                line-height:@height / (@font-size - @nudge-top);
                                
                                left:@nudge-left * 1em; right:0; top:0; right:0;
                        }
                }
        
                &:hover {
                        > .close {
                                background-color : @close-bg-color;
                        }
                }
        
                &:hover, &:active, &:focus {
                        @a:#3A5780; @b: fadeout(lighten(@a, 25), 85);
                        background:linear-gradient(90deg, lighten(@b, 30), @b);
                }
        }
}